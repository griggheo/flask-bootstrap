name: app-docker-pipelines

on:
  push:
    tags:        
      - v*.*.*
    #branches:
    #  - master
    # paths:
    #   - "src/**"
  workflow_call:

jobs:
  app-build-ubuntu:
    uses: codepraxis-io/github-actions/.github/workflows/app-build-workflow.yml@main
    with:
      build_dir: 'venv'
      cosign_blob_name: ${{ github.repository }}-ubuntu22.04-python3.10
      docker_build_image: 'ghcr.io/codepraxis-io/ubuntu22.04:python3.10-build'
    #secrets: inherit
    secrets: 
      destination_registry_username: ${{secrets.GHCR_USERNAME}}
      destination_registry_password: ${{secrets.GHCR_TOKEN}}
      cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
      cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
      cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

  app-build-debian:
    uses: codepraxis-io/github-actions/.github/workflows/app-build-workflow.yml@main
    with:
      build_dir: 'venv'
      cosign_blob_name: ${{ github.repository }}-debian11-python3.9
      docker_build_image: 'ghcr.io/codepraxis-io/debian11:python3-build' # fix: ModuleNotFoundError: No module named 'importlib_metadata'
    #secrets: inherit
    secrets: 
      destination_registry_username: ${{secrets.GHCR_USERNAME}}
      destination_registry_password: ${{secrets.GHCR_TOKEN}}
      cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
      cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
      cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

  # app-build-alpine:
  #   uses: codepraxis-io/github-actions/.github/workflows/app-build-workflow.yml@main
  #   with:
  #     build_dir: 'venv'
  #     cosign_blob_name: ${{ github.repository }}
  #     docker_build_image: 'ghcr.io/codepraxis-io/alpine3.16:python3.10-build'
  #   #secrets: inherit
  #   secrets: 
  #     destination_registry_username: ${{secrets.GHCR_USERNAME}}
  #     destination_registry_password: ${{secrets.GHCR_TOKEN}}
  #     cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
  #     cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
  #     cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

  app-docker-ubuntu-2204:
    uses: codepraxis-io/github-actions/.github/workflows/app-docker-workflow.yml@main
    needs: ['app-build-ubuntu']
    with:
      build_dir: 'venv'
      cosign_blob_name: ${{ github.repository }}
      docker_image_name: ${{ github.repository }}
      docker_image_tag_suffix: 'ubuntu22.04-python3.10'
      stop_on_critical_vulns: 'true'
    #secrets: inherit
    secrets: 
      destination_registry_username: ${{secrets.GHCR_USERNAME}}
      destination_registry_password: ${{secrets.GHCR_TOKEN}}
      cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
      cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
      cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

  app-docker-distroless-debian11:
    uses: codepraxis-io/github-actions/.github/workflows/app-docker-workflow.yml@main
    needs: ['app-build-debian']
    with:
      build_dir: 'venv'
      cosign_blob_name: ${{ github.repository }}
      docker_image_name: ${{ github.repository }}
      docker_image_tag_suffix: 'distroless-debian11'
      dockerfile_name: 'Dockerfile.distroless'
      dockerfile_scanner: 'semgrep'
      #stop_on_critical_vulns: 'true'
      verify_base_image_signature: 'false'
    #secrets: inherit
    secrets: 
      destination_registry_username: ${{secrets.GHCR_USERNAME}}
      destination_registry_password: ${{secrets.GHCR_TOKEN}}
      cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
      cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
      cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

  # app-docker-alpine-316:
  #   uses: codepraxis-io/github-actions/.github/workflows/app-docker-workflow.yml@main
  #   needs: ['app-build-alpine']
  #   with:
  #     build_dir: 'venv'
  #     cosign_blob_name: ${{ github.repository }}
  #     docker_image_name: ${{ github.repository }}
  #     docker_image_tag_suffix: 'alpine3.16-python3.10'
  #     docker_run_image: 'ghcr.io/codepraxis-io/alpine3.16:python3.10-run'
  #     docker_image_scanner: 'grype'
  #   #secrets: inherit
  #   secrets: 
  #     destination_registry_username: ${{secrets.GHCR_USERNAME}}
  #     destination_registry_password: ${{secrets.GHCR_TOKEN}}
  #     cosign_private_key: ${{secrets.COSIGN_PRIVATE_KEY}}
  #     cosign_private_key_password: ${{secrets.COSIGN_PRIVATE_KEY_PASSWORD}}
  #     cosign_public_key: ${{secrets.COSIGN_PUBLIC_KEY}}

